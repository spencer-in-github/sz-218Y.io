st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = rail_data[bay_counties,] %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = rail_data[bay_counties,] %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = rail_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()
)
bart_data[bay_counties %>% st_transform(st_crs(rail_data)),]
bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()
??st_crs
lengths(st_intersects(bay_tracts, bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid())))
lengths(st_intersects(bay_tracts, bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()))
lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid()))
length(lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid())))
dim(bay_tracts)
sum(lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid())) )
count_bart <- lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid()))
lengths(st_intersects(bay_tracts,
rail_data %>%
st_transform(st
count_rail <- lengths(st_intersects(bay_tracts,
count_rail <- lengths(st_intersects(bay_tracts,
rail_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid()))
sum(count_rail)
dim(rail)
View(bay_multiple_tract)
bay_tracts %>%
st_drop_geometry()
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(count_bart)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail)
```{r}
bay_station <- bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail)
View(bay_station)
View(bay_tracts)
View(bay_multiple_tract)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail) %>%
inner_join(., bay_multiple_tract, by = "tract")
model <- lm(perc_transport ~ ., data = bay_station)
model <- lm(perc_transport ~ ., data = bay_station)
bay_station <- bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail) %>%
inner_join(., bay_multiple_tract, by = "tract")
model <- lm(perc_transport ~ ., data = bay_station)
model
model$call
model <- lm(perc_transport ~ bart + rail, data = bay_station)
model
summary(model)
names(bay_station)
model <- lm(perc_transport ~ bart + rail + perc_outcounty + perc_over100k + perc_non_white, data = bay_station)
summary(model)
pander(summary(model))
pander::pander(summary(model))
bay_tp_classification %>%
group_by(means) %>%
summarize(
income = mean(income, na.rm = T)
) %>%
ggplot(
aes(
x = means,
y = income
)
) + labs(y = "Income", title = "Means of commute distribution by income") +
geom_bar(
stat = "identity"
)
model <- lm(perc_transport ~ bart + rail + perc_outcounty +perc_outcounty^2+ perc_over100k + perc_non_white + perc_non_white^2, data = bay_station)
pander::pander(summary(model))
View(bay_tp_classification)
write_rds(bay_tp_classification, "bay_tp_classification.rds")
library(corrplot)
bay_tp_classification <- readRDS("bay_tp_classification.rds")
correlationplot <- bay_tp_classification %>%
select(
means,
income,
rent,
time
) %>%
mutate(means = as.numeric(means)) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
#unzip(zipfile = "BART_System_2020.kmz")
#datasource: https://www.bart.gov/schedules/developers/geo
#datefile source: https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip
bart_data <- st_read("doc.kml")
#unzip(zipfile = "BART_System_2020.kmz")
#datasource: https://www.bart.gov/schedules/developers/geo
#datefile source: https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip
bart_data <- st_read("doc.kml")
library(corrplot)
bay_tp_classification <- readRDS("bay_tp_classification.rds")
correlationplot <- bay_tp_classification %>%
select(
means,
income,
rent,
time
) %>%
mutate(means = as.numeric(means)) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
saveRDS(bay_pumas, "bay_pumas.rds")
bay_pumas = readRDS("bay_pumas.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
correlationplot <- bay_multiple_tract %>%
select(-tract) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
corrplot(
correlationplot,
method = "number",
type = "upper"
)
correlationplot <- bay_multiple_tract %>%
select(-tract) %>%
cor()
dev.off()
ff <- tempfile()
png(filename=ff)
res <- corrplot(
correlationplot,
method = "number",
type = "upper"
)
dev.off()
unlink(ff)
res
corrplot(
correlationplot,
method = "number",
type = "upper"
)
??readPNG
png::readPNG("corr1.png")
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("walkerke/mapboxapi")
devtools::install_github("walkerke/mapboxapi")
library(mapboxapi)
mb_access_token("sk.eyJ1Ijoic3BlbmNlcnoiLCJhIjoiY2t5cDMwbHZ4MDY0cjJvb3k3MWx4ZmZqNCJ9.BvoXo88c-qPxB2FNKEV0Vg", install = T)
setwd("~/GitHub/sz-218Y.io")
knitr::opts_chunk$set(echo = F, warning = F, message = F)
options(tigris_use_cache = TRUE)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(leaflet)
library(mapboxapi)
library(readr)
library(jsonlite)
zip <- read_rds("zip_info_94108.rds")
zip_blocks <- read_rds("zip_block_info_94108.rds")
zip_cbgs <-
block_groups(state = "CA", county = "San Francisco") %>%
st_centroid() %>%
.[zip,] %>%
st_drop_geometry() %>%
left_join(block_groups(state = "CA", county = "San Francisco") %>% select(GEOID)) %>%
st_as_sf()
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
acs_vars_2019_5yr <- read_rds("acs_vars_2019_5yr.rds")
ca_cbgs_pop <- readRDS("ca_pop_2013_2019.rds")
origin_cbgs_pop <- read_rds("origin_cbgs_pop_94108.rds")
travel_time_mode <- read_rds("94108_travel_time_mode.rds")
ct_trips <- read_rds("94108_trips.rds")
ct_visits <- read_rds("94108_trips_vmt_by_year_tract.rds")
ct_trips_ghg_annual <- read_rds("94108_vmt_ghg_total.rds")
bldg_pge_by_year <- read_rds("94108_bldg_pge_2013_2019.rds")
bldg_energy_normalized <-
read_rds("94108_bldg_energy_normalized.rds")
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(y))
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate*1000)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate*100)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate*10)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate*20)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate*50)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts` = job_cnts,`Residential Population` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts`,`Residential Population`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate*40)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
total <- bldg_energy_normalized %>%
left_join(ct_trips_ghg_annual, by = c("YEAR" = "year")) %>%
select(
YEAR, building = TOTALTCO2E, `Job Counts in line` = job_cnts,`Residential Population in line` = resident_pop, trips, vmt, commute = ghg
) %>%
pivot_longer(
cols = c(`Job Counts in line`,`Residential Population in line`),
names_to = "Population Type",
values_to = "Estimate"
)
total %>%
ggplot() +
geom_bar(
aes(x = YEAR, y = commute),
stat = "identity"
) +
geom_line(aes(x = YEAR, y = Estimate*40)) +
facet_grid(cols = vars(`Population Type`)) +
labs(
x = "Year",
y = "GHG emission (metric Tonnes)",
title = "The annual GHG emission from commute transportation in 94108, 2013-2019",
subtitle = "Line indicates the number of relevant population"
)
# zctas <- zctas() #Download a Zip Code Tabulation Area (ZCTA) shapefile into R
#
# #downtown Palo Alto residential area
# zip <- zctas %>%
#   filter(GEOID10 == "94108") #single line information of 94108
#
# blocks <- blocks("CA") #all block information in CA
#
# zip_blocks <- blocks %>%
#   st_centroid() %>%
#   .[zip, ] #all blocks in zip=94108
# saveRDS(zip, "zip_info_94108.rds")
# saveRDS(zip_blocks, "zip_block_info_94108.rds")
gc()
rm(list=ls())
