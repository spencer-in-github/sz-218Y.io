) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[3,2]),
color = "green"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[4,1]),
color = "red"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[4,2]),
color = "red"
)
bay_tracts <- tracts ("CA", bay_county_names, cb = T, progress_bar = F)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[2,1])
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[2,2])
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[3,1]),
color = "green"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[3,2]),
color = "green"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[4,1]),
color = "red"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[4,2]),
color = "red"
)
obs_matrix <-
bay_multiple_tract %>%
select(
perc_over100k,
perc_non_white,
perc_outcounty
) %>%
as.matrix()
library(StatMatch)
dist_matrix <- mahalanobis.dist(obs_matrix)
rownames(dist_matrix) <- bay_multiple_tract$tract
colnames(dist_matrix) <- bay_multiple_tract$tract
dist_matrix_pairmatch <- dist_matrix
diag(dist_matrix_pairmatch) <- NA
matched_pair_tract <-
1:nrow(dist_matrix_pairmatch) %>%
map_dfr(function(x){
min_index <- which(dist_matrix_pairmatch[x, ] == min(dist_matrix_pairmatch[x, ], na.rm = T))
data.frame(
tract = bay_multiple_tract$tract[x],
matched_tract = bay_multiple_tract$tract[min_index]
)
})
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[2,1])
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[2,2])
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[3,1]),
color = "green"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[3,2]),
color = "green"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[4,1]),
color = "red"
) %>%
addPolygons(
data = bay_tracts %>%
filter(GEOID == matched_pair_tract[4,2]),
color = "red"
)
bart <- st_read("https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip")
bart <- st_read("BART_System_2020.kmz")
temp <- tempfile()
download.file("https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip",temp)
data <- st_read(unz(temp, "a1.kml"))
download.file("https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip",temp)
data <- st_read(unz(temp, "BART_System_2020.kmz_.kml"))
data <- st_read(unz(temp, "BART_System_2020.kml"))
unlink(temp)
temp <- tempfile()
download.file("https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip",temp)
data <- st_read(unz(temp, "BART_System_2020.kml"))
bart <- st_read("BART_System_2020.kml")
st_drivers()
unz(temp, "BART_System_2020.kml")
data <- st_read("BART_System_2020.kml")
unz(temp, "BART_System_2020.kml")
data <- st_read("/var/folders/x8/7qbkpvz55yl7n3_h8zdf0gnr0000gn/T//RtmpiR7BW4/file95993acbcd32:BART_System_2020.kml")
temp <- tempfile()
download.file("https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip",temp)
unz(temp, "BART_System_2020.kml")
data <- st_read(unz(temp, "BART_System_2020.kml"))
unz(temp, "BART.kml")
download.file("https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip",temp)
unz(temp, "BART.kml")
data <- st_read(unz(temp, "BART.kml"))
??unz
unzip(zipfile = "BART_System_2020.kmz")
file = unzip(zipfile = "BART_System_2020.kmz")
unzip(zipfile = "BART_System_2020.kmz")
data <- st_read("doc.kml")
View(data)
layers <- st_layers(data)
layers <- st_layers("doc.kml")
View(layers)
data <- st_read("doc.kml")
bart_data <- st_read("doc.kml")
# Use `st_layers' to list all layer names and their type in a data source.
# Set the `layer' argument in `st_read' to read a particular layer.
# Reading layer `BART Station' from data source
st_layers("doc.kml")
data <- read.table("https://gisdata.dot.ca.gov/arcgis/rest/services/Rail/California_Rail_Stations/MapServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json")
View(dist_matrix)
View(data)
rail_data <- read.csv("California_Rail_Stations.csv")
View(rail_data)
rail_kmldata <- st_read("California_Rail_Stations.kml")
View(rail_kmldata)
View(bart_data)
#plot bart stations and rail stations in Bay Area map
ca_counties <- counties("CA", cb = T, progress_bar = F)
??tracts
bay_tracts
View(bay_tracts)
View(bay_tracts[[10]][[1]])
st_crs(bay_tracts)
st_crs(bart_data)
st_crs(bay_tracts)
st_crs(bart_data)
st_crs(rail_data)
st_crs(rail_kmldata)
rail_data <- st_read("California_Rail_Stations.kml")
st_crs(rail_data) #WGS84
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
bart_data %>%
st_transform(projection)
bart <- bart_data %>%
st_transform(projection)
rail <- rail_data %>%
st_transform(projection)
ggplot(bart) + geom_sf()
ggplot(bay_tracts) + geom_sf()
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_tracts
) %>%
addMarkers(
data = rail %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_tracts
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_tracts
) %>%
addMarkers(
data = rail %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_tracts
) %>%
addMarkers(
data = rail
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_tracts
) %>%
addMarkers(
data = bart
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_tracts
)
bay_county<- counties("CA", bay_county_names, cb = T, progress_bar = F)
View(rail)
View(bay_tracts)
View(bart)
View(bart)
View(bay_counties)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = bart
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = bart %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
)
bay_bart <- bart[bay_county, ]
View(bart)
View(bay_tracts[[10]][[15]])
View(bay_tracts[[10]][[1]])
View(rail)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = rail_data %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = rail_data[bay_counties,] %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = rail_data[bay_counties,] %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = rail_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_counties
) %>%
addMarkers(
data = bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()
)
bart_data[bay_counties %>% st_transform(st_crs(rail_data)),]
bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()
??st_crs
lengths(st_intersects(bay_tracts, bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid())))
lengths(st_intersects(bay_tracts, bart_data[bay_counties %>% st_transform(st_crs(rail_data)),] %>%
st_centroid()))
lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid()))
length(lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid())))
dim(bay_tracts)
sum(lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid())) )
count_bart <- lengths(st_intersects(bay_tracts,
bart_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid()))
lengths(st_intersects(bay_tracts,
rail_data %>%
st_transform(st
count_rail <- lengths(st_intersects(bay_tracts,
count_rail <- lengths(st_intersects(bay_tracts,
rail_data %>%
st_transform(st_crs(bay_tracts)) %>%
st_centroid()))
sum(count_rail)
dim(rail)
View(bay_multiple_tract)
bay_tracts %>%
st_drop_geometry()
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(count_bart)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail)
```{r}
bay_station <- bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail)
View(bay_station)
View(bay_tracts)
View(bay_multiple_tract)
bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail) %>%
inner_join(., bay_multiple_tract, by = "tract")
model <- lm(perc_transport ~ ., data = bay_station)
model <- lm(perc_transport ~ ., data = bay_station)
bay_station <- bay_tracts %>%
st_drop_geometry() %>%
mutate(
tract = paste0(STATEFP, COUNTYFP, TRACTCE)
) %>%
select(tract) %>%
bind_cols(bart = count_bart, rail = count_rail) %>%
inner_join(., bay_multiple_tract, by = "tract")
model <- lm(perc_transport ~ ., data = bay_station)
model
model$call
model <- lm(perc_transport ~ bart + rail, data = bay_station)
model
summary(model)
names(bay_station)
model <- lm(perc_transport ~ bart + rail + perc_outcounty + perc_over100k + perc_non_white, data = bay_station)
summary(model)
pander(summary(model))
pander::pander(summary(model))
bay_tp_classification %>%
group_by(means) %>%
summarize(
income = mean(income, na.rm = T)
) %>%
ggplot(
aes(
x = means,
y = income
)
) + labs(y = "Income", title = "Means of commute distribution by income") +
geom_bar(
stat = "identity"
)
model <- lm(perc_transport ~ bart + rail + perc_outcounty +perc_outcounty^2+ perc_over100k + perc_non_white + perc_non_white^2, data = bay_station)
pander::pander(summary(model))
View(bay_tp_classification)
write_rds(bay_tp_classification, "bay_tp_classification.rds")
library(corrplot)
bay_tp_classification <- readRDS("bay_tp_classification.rds")
correlationplot <- bay_tp_classification %>%
select(
means,
income,
rent,
time
) %>%
mutate(means = as.numeric(means)) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
#unzip(zipfile = "BART_System_2020.kmz")
#datasource: https://www.bart.gov/schedules/developers/geo
#datefile source: https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip
bart_data <- st_read("doc.kml")
#unzip(zipfile = "BART_System_2020.kmz")
#datasource: https://www.bart.gov/schedules/developers/geo
#datefile source: https://www.bart.gov/sites/default/files/docs/BART_System_2020.kmz_.zip
bart_data <- st_read("doc.kml")
library(corrplot)
bay_tp_classification <- readRDS("bay_tp_classification.rds")
correlationplot <- bay_tp_classification %>%
select(
means,
income,
rent,
time
) %>%
mutate(means = as.numeric(means)) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
saveRDS(bay_pumas, "bay_pumas.rds")
bay_pumas = readRDS("bay_pumas.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
correlationplot <- bay_multiple_tract %>%
select(-tract) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
corrplot(
correlationplot,
method = "number",
type = "upper"
)
correlationplot <- bay_multiple_tract %>%
select(-tract) %>%
cor()
dev.off()
ff <- tempfile()
png(filename=ff)
res <- corrplot(
correlationplot,
method = "number",
type = "upper"
)
dev.off()
unlink(ff)
res
corrplot(
correlationplot,
method = "number",
type = "upper"
)
??readPNG
png::readPNG("corr1.png")
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("walkerke/mapboxapi")
devtools::install_github("walkerke/mapboxapi")
library(mapboxapi)
mb_access_token("sk.eyJ1Ijoic3BlbmNlcnoiLCJhIjoiY2t5cDMwbHZ4MDY0cjJvb3k3MWx4ZmZqNCJ9.BvoXo88c-qPxB2FNKEV0Vg", install = T)
setwd("~/GitHub/sz-218Y.io")
rm(list = ls())
