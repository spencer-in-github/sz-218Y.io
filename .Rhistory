summarise_all(mean)
test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID,date) %>%
summarise_all(mean)
test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise_all(days = n())
test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
count() %>%
summarise_all(days = n())
test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n())
test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n(), dif = mean(cf1dif), atmdif = mean(amtdif))
table(rwc_out_fault)
rwc_out_fault <- test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n(), dif = mean(cf1dif), atmdif = mean(amtdif))
table(rwc_out_fault)
knitr::kable(rwc_out_fault)
rwc_out_fault <- test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n(), PM25_CF1_dif = mean(cf1dif), PM25_ATM_dif = mean(amtdif))
knitr::kable(rwc_out_fault)
names(rwc_sensors)
rwc_out_fault <- test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n(), PM25_CF1_dif = mean(cf1dif), PM25_ATM_dif = mean(amtdif)) %>%
left_join(rwc_sensors %>% select(
ID = sensor_index, name
))
rwc_out_fault <- test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n(), PM25_CF1_dif = mean(cf1dif), PM25_ATM_dif = mean(amtdif)) %>%
left_join(rwc_sensors %>% select(
ID = as.numeric(sensor_index), name
))
left_join(rwc_sensors %>% select(
ID = sensor_index, name
))
rwc_out_fault <- test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n(), PM25_CF1_dif = mean(cf1dif), PM25_ATM_dif = mean(amtdif)) %>%
mutate(ID = as.character(ID))
left_join(rwc_sensors %>% select(
ID = sensor_index, name
))
rwc_out_fault <- test %>%
filter(cf1dif > 4000 | cf1dif < -4000 | amtdif > 3000 | amtdif < -3000) %>%
group_by(ID) %>%
summarise(count = n(), PM25_CF1_dif = mean(cf1dif), PM25_ATM_dif = mean(amtdif)) %>%
mutate(ID = as.character(ID)) %>%
left_join(rwc_sensors %>% select(
ID = sensor_index, name
))
knitr::kable(rwc_out_fault)
leaflet() %>%
addTiles() %>%
addMarkers(
rwc_out_fault
)
??mapview
mapview(rwc_out_fault)
mapview(rwc_out_fault %>% st_as_sf())
mapview(rwc_out_fault %>% st_as_sf(), zcol = "name")
mapview(rwc_out_fault %>% st_as_sf(), zcol = "name", layer.name = "Faulty sensor")
saveRDS(rwc_out_fault, "rwc_out_fault.rds")
rwc_out_fault <- read_rds("rwc_out_fault.rds")
knitr::kable(rwc_out_fault)
mapview(rwc_out_fault %>% st_as_sf(), zcol = "name", layer.name = "Faulty sensor")
#use this data frame as temp to run following code
#repeat with rwc_in, rwc_out, sm_in, sm_out
raw_data <- rwc_indoor_raw
names(raw_data)
test <- raw_data %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
plot(test$cf1dif) #6 sensor's difference is way high (>4000)
plot(test$amtdif) #6 sensor's difference is way high (>3000)
plot(test$amtdif) #6 sensor's difference is way high (>3000)
#RWC OUT: 6 cluster of data difference is way high (>4000)
#RWC IN: no big different
plot(test$amtdif)
#use this data frame as temp to run following code
#repeat with rwc_in, rwc_out, sm_in, sm_out
raw_data <- sm_indoor_raw
plot(raw_data$PM25_CF1_A, raw_data$PM25_CF1_B)
plot(raw_data$PM25_ATM_A, raw_data$PM25_ATM_B)
test <- raw_data %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
plot(test$cf1dif)
#RWC OUT: 6 cluster of data difference is way high (>4000)
#RWC IN: no big different
plot(test$amtdif)
#RWC OUT: 6 cluster of data difference is way high (>4000)
#RWC IN: no big different
#SM IN: one cluster < -15
plot(test$amtdif)
#RWC OUT: 6 cluster of data difference is way high (>4000)
#RWC IN: no big different
#SM IN: one cluster < -15
plot(test$amtdif)
table(test$cf1dif)
sum(is.na(test$PM_CF1))
sum(!is.na(test$PM_CF1))
test <- raw_data %>%
replace_na( replace = 0) %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
replace_na( replace = c(0,0,0,0,0,0) %>%
test <- raw_data %>%
replace_na( replace = c(0,0,0,0,0,0)) %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
test <- raw_data %>%
replace_na( replace = c(0,0,0,0,0,0)) %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
test <- raw_data %>%
replace_na( replace = c(0)) %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
test <- raw_data %>%
replace_na( replace = list(0)) %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
#use this data frame as temp to run following code
#repeat with rwc_in, rwc_out, sm_in, sm_out
raw_data <- sm_outdoor_raw
names(raw_data)
plot(raw_data$PM25_CF1_A, raw_data$PM25_CF1_B)
plot(raw_data$PM25_ATM_A, raw_data$PM25_ATM_B)
plot(raw_data$PM25_ATM_A, raw_data$PM25_ATM_B)
plot(raw_data$PM25_CF1_A)
plot(raw_data$PM25_ATM_A)
plot(raw_data$PM25_ATM_A)
plot(raw_data$PM25_ATM_B)
plot(raw_data$PM25_CF1_B)
plot(raw_data$PM25_ATM_B)
plot(raw_data$PM25_CF1_B)
plot(raw_data$PM25_ATM_B)
#RWC OUT: 6 cluster of data is way high (>3000)
#RWC IN: no big different
names(test)
sm_out_fault <- test %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3009)
sm_out_fault <- test %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000)
view(head(sm_out_fault))
test <- raw_data %>%
replace_na(replace = c()) %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
sm_out_fault <- test %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000)
view(head(sm_out_fault))
plot(raw_data$PM25_CF1_B) #>4500
plot(raw_data$PM25_ATM_B) #>3000
test <- raw_data %>%
mutate(
cf1dif = PM25_CF1_A - PM25_CF1_B,
amtdif = PM25_ATM_A - PM25_ATM_B,
PM_CF1 = 0.524*(PM25_CF1_A + PM25_CF1_B)/2 - 0.0852*Humidity + 5.72,
PM_ATM =  0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
sm_out_fault <- test %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000)
plot(raw_data$PM25_CF1_B) #>4500
plot(raw_data$PM25_ATM_B) #>3000
sm_out_fault <- raw_data %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000)
view(head(sm_out_fault))
sm_out_fault <- raw_data %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000) %>%
group_by(ID) %>%
summarise(count=n(),
cf1dif = mean(PM25_CF1_A - PM25_CF1_B),
atmdif = mean(PM25_ATM_A - PM25_ATM_B),
) %>%
mutate(ID = as.character(ID)) %>%
left_join(sm_sensors %>% select(
ID = sensor_index, name
))
sm_out_fault <- raw_data %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000) %>%
group_by(ID) %>%
summarise(count=n(),
cf1dif = mean(PM25_CF1_A - PM25_CF1_B),
atmdif = mean(PM25_ATM_A - PM25_ATM_B)
) %>%
mutate(ID = as.character(ID)) %>%
left_join(sm_sensors %>% select(
ID = sensor_index, name
))
knitr::kable(sm_out_fault)
fault_sensors <- rwc_out_fault %>%
rbind(sm_out_fault)
sm_out_fault <- raw_data %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000) %>%
group_by(ID) %>%
summarise(count=n(),
cf1dif = mean(PM25_CF1_A - PM25_CF1_B),
atmdif = mean(PM25_ATM_A - PM25_ATM_B)
) %>%
mutate(ID = as.character(ID)) %>%
left_join(sm_sensors %>% select(
ID = sensor_index, name
))
View(sm_out_fault)
View(rwc_out_fault)
sm_out_fault <- raw_data %>%
filter(PM25_CF1_B > 4500 | PM25_ATM_B > 3000) %>%
group_by(ID) %>%
summarise(count=n(),
PM25_CF1_dif = mean(PM25_CF1_A - PM25_CF1_B),
PM25_ATM_dif = mean(PM25_ATM_A - PM25_ATM_B)
) %>%
mutate(ID = as.character(ID)) %>%
left_join(sm_sensors %>% select(
ID = sensor_index, name
))
fault_sensors <- rwc_out_fault %>%
rbind(sm_out_fault)
View(fault_sensors)
fault_sensors <- rwc_out_fault %>% mutate(
City = "Redwood City",
Location = "outside"
) %>%
rbind(sm_out_fault %>% mutate(
City = "San Mateo City",
Location = "outside"
))
saveRDS(fault_sensors, "fault_sensors.rds")
mapview(fault_sensors %>% st_as_sf(), zcol = "name", layer.name = "Faulty sensor")
fault_sensors <- read_rds("fault_sensors.rds")
knitr::kable(fault_sensors)
mapview(fault_sensors %>% st_as_sf(), zcol = "name", layer.name = "Faulty sensor")
fault_sensors <- read_rds("fault_sensors.rds")
knitr::kable(fault_sensors,
caption = "The information of faulty sensors in RWC and SMC (count indicates the number of observations shown high variances between Channel A and B)")
#remove 2 outside sensors in rwc
fault_sensors$ID
names(rwc_sensors)
rwc_pm25_out_voronoi <-
rwc_sensors %>%
filter(location_type == "outside" & !sensor_index %in% fault_sensors$ID)
rwc_pm25_out_voronoi <-
rwc_sensors %>%
filter(location_type == "outside" & !sensor_index %in% fault_sensors$ID) %>%
st_union() %>%
st_voronoi() %>%
st_cast() %>%
st_as_sf() %>%
st_intersection(.,st_union(rwc_boundary %>% st_transform(4326))) %>%
st_join(rwc_sensors %>% filter(location_type == "outside"))
rwc_sensors_out_weighted_corrected <-
rwc_sensors %>%
filter(location_type == "outside" & !sensor_index %in% fault_sensors$ID) %>%
st_union() %>%
st_voronoi() %>%
st_cast() %>%
st_as_sf() %>%
st_intersection(.,st_union(rwc_boundary %>% st_transform(4326))) %>%
st_join(rwc_sensors %>% filter(location_type == "outside")) %>%
mutate(
area = st_area(.) %>% as.numeric()
)
rwc_sensors_out_weighted_corrected <-
rwc_sensors %>%
filter(location_type == "outside" & !sensor_index %in% fault_sensors$ID)
rwc_sensors_out_weighted_corrected <-
rwc_sensors %>%
filter(location_type == "outside" & !sensor_index %in% fault_sensors$ID) %>%
st_union() %>%
st_voronoi() %>%
st_cast() %>%
st_as_sf() %>%
st_intersection(.,st_union(rwc_boundary %>% st_transform(4326)))
View(rwc_sensors_out_weighted_corrected)
rwc_sensors_out_weighted_corrected <-
rwc_sensors %>%
filter(location_type == "outside" & !sensor_index %in% fault_sensors$ID) %>%
st_union() %>%
st_voronoi() %>%
st_cast() %>%
st_as_sf() %>%
st_intersection(.,st_union(rwc_boundary %>% st_transform(4326))) %>%
st_join(rwc_sensors %>% filter(location_type == "outside"& !sensor_index %in% fault_sensors$ID)) %>%
mutate(
area = st_area(.) %>% as.numeric()
)
sm_sensors_out_weighted_corrected <-
sm_sensors %>%
filter(location_type == "outside" & !sensor_index %in% fault_sensors$ID) %>%
st_union() %>%
st_voronoi() %>%
st_cast() %>%
st_as_sf() %>%
st_intersection(.,st_union(sm_boundary %>% st_transform(4326))) %>%
st_join(sm_sensors %>% filter(location_type == "outside"& !sensor_index %in% fault_sensors$ID)) %>%
mutate(
area = st_area(.) %>% as.numeric()
)
?apply
colSums(is.na(rwc_outdoor_raw))
rwc_sensors_out_weighted %>%
st_drop_geometry() %>%
select(
sensor_index, area
)
rwc_sensors_out_weighted_corrected %>%
st_drop_geometry() %>%
select(
sensor_index, area
)
rwc_outdoor_weighted <- rwc_sensors_out_weighted_corrected %>%
st_drop_geometry() %>%
select(
sensor_index, area
) %>%
left_join(
rwc_outdoor_raw %>%
mutate(sensor_index = as.character(ID))
)
rwc_outdoor_weighted <- rwc_sensors_out_weighted_corrected %>%
st_drop_geometry() %>%
select(
sensor_index, area
) %>%
left_join(
rwc_outdoor_raw %>%
mutate(sensor_index = as.character(ID))
) %>%
group_by(date, ID) %>%
summarize_all(first)
View(rwc_outdoor_weighted)
colSums(is.na(rwc_outdoor_weighted))
rwc_outdoor_weighted <- rwc_sensors_out_weighted_corrected %>%
st_drop_geometry() %>%
select(
sensor_index, area
) %>%
left_join(
rwc_outdoor_raw %>%
mutate(sensor_index = as.character(ID))
) %>%
group_by(date, ID) %>%
summarize_all(first) %>% #remove duplicate observations of the same day by looping start&end defination
mutate(
PM25 = 0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72, na.rm = T
)
rwc_outdoor_weighted <- rwc_sensors_out_weighted_corrected %>%
st_drop_geometry() %>%
select(
sensor_index, area
) %>%
left_join(
rwc_outdoor_raw %>%
mutate(sensor_index = as.character(ID))
) %>%
group_by(date, ID) %>%
summarize_all(first) %>% #remove duplicate observations of the same day by looping start&end defination
mutate(
PM25 = 0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72
)
rwc_outdoor_weighted <- rwc_sensors_out_weighted_corrected %>%
st_drop_geometry() %>%
select(
sensor_index, area
) %>%
left_join(
rwc_outdoor_raw %>%
mutate(sensor_index = as.character(ID))
) %>%
group_by(date, ID) %>%
summarize_all(first) %>% #remove duplicate observations of the same day by looping start&end defination
mutate(
PM25 = 0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72 #use CF = ATM for outside data
) %>%
group_by(date, Location) %>%
summarize(PM25 = weighted.mean(PM25, area, na.rm = T)) %>%
mutate(city = "Redwood City")
sm_outdoor_weighted <- sm_sensors_out_weighted_corrected %>%
st_drop_geometry() %>%
select(
sensor_index, area
) %>%
left_join(
sm_outdoor_raw %>%
mutate(sensor_index = as.character(ID))
) %>%
group_by(date, ID) %>%
summarize_all(first) %>% #remove duplicate observations of the same day by looping start&end defination
mutate(
PM25 = 0.524*(PM25_ATM_A + PM25_ATM_B)/2 - 0.0852*Humidity + 5.72 #use CF = ATM for outside data
) %>%
group_by(date, Location) %>%
summarize(PM25 = weighted.mean(PM25, area, na.rm = T)) %>%
mutate(city = "San Mateo City")
View(sm_outdoor_weighted)
rwc_indoor_weighted <- rwc_indoor_raw %>%
mutate(sensor_index = as.character(ID)) %>%
left_join(
rwc_sensors_in_weighted %>%
select(
sensor_index, area
)) %>%
group_by(date, Location) %>%
summarize(PM25 = weighted.mean(PM25, area, na.rm = T)) %>%
mutate(city = "Redwood City")
rwc_indoor_weighted <- rwc_indoor_raw %>%
mutate(sensor_index = as.character(ID)) %>%
left_join(
rwc_sensors_in_weighted %>%
select(
sensor_index, area
)) %>%
group_by(date, ID) %>%
summarize_all(first) %>%
group_by(date, Location) %>%
summarize(PM25 = weighted.mean(PM25, area, na.rm = T)) %>%
mutate(city = "Redwood City")
rwc_indoor_weighted <- rwc_indoor_raw %>%
mutate(sensor_index = as.character(ID)) %>%
left_join(
rwc_sensors_in_weighted %>%
st_drop_geometry() %>%
select(
sensor_index, area
)) %>%
group_by(date, ID) %>%
summarize_all(first) %>%
group_by(date, Location) %>%
summarize(PM25 = weighted.mean(PM25, area, na.rm = T)) %>%
mutate(city = "Redwood City")
View(rwc_indoor_weighted)
View(sm_indoor_weighted)
fc_sensor_data <- readRDS("~/GitHub/sz-218Y.io/fc_sensor_data.rds")
View(fc_sensor_data)
saveRDS(rwc_outdoor_weighted, "rwc_outdoor_weighted.rds")
saveRDS(rwc_indoor_weighted, "rwc_indoor_weighted.rds")
saveRDS(sm_outdoor_weighted, "sm_outdoor_weighted.rds")
saveRDS(sm_indoor_weighted, "sm_indoor_weighted.rds")
rwc_outdoor_weighted <- read_rds("rwc_outdoor_weighted.rds")
view(rwc_outdoor_weighted)
sm_outdoor_weighted <- read_rds("sm_outdoor_weighted.rds")
view(sm_outdoor_weighted)
epa_outdoor <- read_rds("epa_sensor_data.rds")
View(epa_outdoor)
View(rwc_outdoor_raw)
View(rwc_outdoor_weighted)
fc_outdoor <- read_rds("fc_sensor_data.rds")
smc_feb <- rwc_outdoor_weighted %>%
rbind(
sm_outdoor_weighted
) %>% rbind(epa_outdoor) %>% rbind(fc_outdoor)
View(smc_feb)
%>% rbind(sm_indoor_weighted)
smc_feb <- rwc_outdoor_weighted %>%
rbind(
sm_outdoor_weighted
) %>% rbind(epa_outdoor) %>% rbind(fc_outdoor) %>% rbind(rwc_indoor_weighted) %>% rbind(sm_indoor_weighted)
saveRDS(smc_feb, "smc_PM25_feb.rds")
smc_feb <- read_rds
smc_feb <- read_rds("smc_PM25_feb.rds")
names(smc_feb)
