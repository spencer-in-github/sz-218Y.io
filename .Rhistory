geom_density(aes(x = `Assessed Value`))
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_density2d(aes(x = `Assessed Value`))
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_density(aes(x = `Assessed Value`))
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_smooth(aes(x = `Assessed Value`))
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_density(aes(x = `Assessed Value`)) +
geom_smooth()
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot(aes(x = `Assessed Value`)) +
geom_density() +
geom_smooth()
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_density(aes(x = `Assessed Value`))
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_density(aes(x = `Assessed Value`))
?xlab
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_density(aes(x = `Assessed Value`)) +
labs(
x = "Property Value",
y = "Density",
title = "Value($) distribution of sold single-family residential housings in EPA in year 2015-2019"
)
values_own %>%
filter(Exemption != 0) %>%
group_by(`Parcel Number`) %>%
summarise(`Assessed Value` = first(`Assessed Value`)) %>%
st_drop_geometry() %>%
ggplot() +
geom_density(aes(x = `Assessed Value`)) +
labs(
x = "Property Value",
y = "Density",
title = "Distribution of single-family residential housings in EPA sold in year 2015-2019"
)
View(smc_exemption)
rent_income <-
1:4 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #TENURE BY UNITS IN STRUCTURE
}) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable)
rent_income <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #household income by gross rent
) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable)
rent_income <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #household income by gross rent
) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
cols = ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable)
View(rent_income)
??pivot_longer
rent_income <-
1:4 %>%
map_dfr(function(x){
getCensus(    name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #TENURE BY UNITS IN STRUCTURE
}) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
```{r renter-income}
rent_income <-
1:4 %>%
map_dfr(function(x){
getCensus(    name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #TENURE BY UNITS IN STRUCTURE
}) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
rent_income <-
1:4 %>%
map_dfr(function(x){
getCensus(    name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #TENURE BY UNITS IN STRUCTURE
}) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
rent_income <-
1:4 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #TENURE BY UNITS IN STRUCTURE
}) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
label,
into = c(NA, NA, NA, "perc"),
sep = "!!"
) %>%
drop_na()
rent_income <-
1:4 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #TENURE BY UNITS IN STRUCTURE
}) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable)
View(rent_income)
rent_income <-
1:4 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:081"),
vars = "group(B25074)") #TENURE BY UNITS IN STRUCTURE
}) %>%
select(!ends_with(c("EA","MA","M"))) %>%
filter(GEO_ID %in% epa_bgs$AFFGEOID) %>%
select(!c(state,NAME)) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
label,
into = c(NA, NA, "income", "perc"),
sep = "!!"
) %>%
drop_na()
rent_income2 <- rent_income %>%
mutate(
burden_level = case_when(
perc %in% perc_category[c(1:5,10)] ~ "no burden",
perc %in% perc_category[6:8] ~ "moderate",
perc %in% perc_category[9] ~ "severe",
perc %in% perc_category[10] ~ "unknown"
)
)
View(rent_income2)
income_perc_cate <- unique(rent_income$perc)
income_perc_cate
rent_income2 <- rent_income %>%
mutate(
burden_level = case_when(
perc %in% income_perc_cate[1:3] ~ "no burden",
perc %in% income_perc_cate[4:6] ~ "moderate",
perc %in% income_perc_cate[7] ~ "severe",
perc %in% income_perc_cate[8] ~ "unknown"
)
)
rent_income2 <- rent_income %>%
mutate(
burden_level = case_when(
perc %in% income_perc_cate[1:3] ~ "no burden",
perc %in% income_perc_cate[4:6] ~ "moderate",
perc %in% income_perc_cate[7] ~ "severe",
perc %in% income_perc_cate[8] ~ "unknown"
)
) %>%
group_by(income,burden_level) %>%
summarize(
estimate = sum(estimate)
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income, y = estimate, fill = burden_level),
identity = "stack"
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income, y = estimate, fill = burden_level),
stats = "identity"
position= "stack"
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income, y = estimate, fill = burden_level),
stats = "identity",
position= "stack"
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income, y = estimate, fill = burden_level),
stats = "identity",
position= "stack"
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income, y = estimate, fill = burden_level),
stat = "identity",
position= "stack"
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income %>% factor(levels = c("no burden", "moderate", "severe", "unknown")),
y = estimate, fill = burden_level),
stat = "identity",
position= "stack"
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income,
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income,
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + guides(fill=guide_legend(title="New Legend Title"))
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income,
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + guides(fill=guide_legend(title="Housing Burden Levels"))
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = epa_exemption %>% filter(`Fiscal Year`== "2018/2019"),
fillColor = "yellow",
color = "black",
weight = 0.5
) %>%
addPolygons(
data = values_own %>% filter(`Fiscal Year`== "2018/2019"),
fillColor = "blue",
color = "black",
weight = 0.5,
fillOpacity = 1
)
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income,
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + guides(fill=guide_legend(title="Housing Burden Levels")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income,
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + guides(fill=guide_legend(title="Housing Burden Levels")) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income,
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + guides(fill=guide_legend(title="Housing Burden Levels")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income %>% factor(levels = rev(unique(rent_income2$income))),
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + guides(fill=guide_legend(title="Housing Burden Levels")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income %>% factor(levels = rev(unique(rent_income2$income))),
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + labs(x = "Renter Household Income", y = "Number of Households") +
guides(fill=guide_legend(title="Housing Burden Levels")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income %>% factor(levels = rev(unique(rent_income2$income))),
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + labs(x = "Renter Household Income", y = "Number of Households" + title = "Renter income distribution by housing burden levels in East Palo Alto") +
guides(fill=guide_legend(title="Housing Burden Levels")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rent_income2 %>%
ggplot() +
geom_bar(
aes(x = income %>% factor(levels = rev(unique(rent_income2$income))),
y = estimate,
fill = burden_level %>% factor(levels = c("no burden", "moderate", "severe", "unknown"))),
stat = "identity",
position= "stack"
) + labs(x = "Renter Household Income", y = "Number of Households", title = "Renter income distribution by housing burden levels in East Palo Alto") +
guides(fill=guide_legend(title="Housing Burden Levels")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = epa_exemption %>% filter(`Fiscal Year`== "2018/2019"),
fillColor = "yellow",
color = "black",
weight = 0.5
) %>%
addPolygons(
data = values_own %>% filter(`Fiscal Year`== "2018/2019"),
fillColor = "blue",
color = "black",
weight = 0.5,
fillOpacity = 1
)
